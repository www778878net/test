name: Auto Merge Develop to Main and Publish to NPM

on:
  push:
    branches:
      - develop

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0 # 获取完整历史记录

      - name: Fetch main branch and check for new tags
        id: check-main-and-tags
        run: |
          git fetch origin main
          NEW_COMMITS=$(git rev-list --count origin/main..develop)
          echo "NEW_COMMITS:$NEW_COMMITS"
          echo "NEW_COMMITS=$NEW_COMMITS" >> $GITHUB_OUTPUT

      - name: Check version number
        id: check-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          PRE_RELEASE_TAG=$(node -p "require('./package.json').version.split('-')[1] || ''")
          echo "VERSION:$VERSION"  
          echo "PRE_RELEASE_TAG:$PRE_RELEASE_TAG"  
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "PRE_RELEASE_TAG=$PRE_RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Get Author Information
        id: get-author
        run: |
          AUTHOR=$(node -p "require('./package.json').author")
          AUTHOR_NAME=$(node -p "typeof require('./package.json').author === 'object' ? require('./package.json').author.name : require('./package.json').author")
          AUTHOR_EMAIL=$(node -p "typeof require('./package.json').author === 'object' ? require('./package.json').author.email : ''")
          echo "AUTHOR_NAME:$AUTHOR_NAME"
          echo "AUTHOR_EMAIL:$AUTHOR_EMAIL"
          echo "AUTHOR_NAME=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "AUTHOR_EMAIL=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT

      - name: Check for new tags
        id: check-tags
        run: |
          # 确保标签已存在于远程仓库
          NEW_TAGS=$(git ls-remote --tags origin | awk '{print $2}' | grep -E "^v1\.0\.[0-9]+$")
          echo "NEW_TAGS:$NEW_TAGS"
          echo "NEW_TAGS=$NEW_TAGS" >> $GITHUB_OUTPUT

      - name: Merge develop into main with squash
        if: steps.check-main-and-tags.outputs.NEW_TAGS != ''
        run: |
          git config --global user.email "657225485@qq.com"
          git config --global user.name "Frieda.Hu<657225485@qq.com>"
          git checkout main
          git merge develop --squash
          # 获取倒数第二个提交的信息，并去除换行符
          SECOND_TO_LAST_COMMIT_MESSAGE=$(git log --pretty=format:'%B' -n 2 develop | tail -n +2 | tr -d '\n')
          git commit -m "$SECOND_TO_LAST_COMMIT_MESSAGE"
          git push origin main